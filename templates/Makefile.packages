-include ../Make.user

MAKEFLAGS += --output-sync=recurse

.PHONY: all .locks

all:{% for env in environments %} {{ env }}/generated/build_cache{% endfor %}


# Ensure that spack.lock files are never removed as intermediate files
.locks:{% for env in environments %} {{ env }}/spack.lock{% endfor %}


# Push built packages to a binary cache if a key has been provided
{% for env, config in environments.items() %}
{{ env }}/generated/build_cache: {{ env }}/generated/env
{% if push_to_cache %}
	$(SPACK) -e ./{{ env }} buildcache create --rebuild-index --allow-root --only=package alpscache $$($(SPACK) -e ./{{ env }} find --format '/$${hash}')
{% endif %}
	touch $@

{% endfor %}
{% for env in environments %}{{ env }}/config.yaml {% endfor %}: | store
	$(SPACK) config --scope=user add config:install_tree:root:$(STORE)

# Create the compilers.yaml configuration for each environment
{% for env, config in environments.items() %}
{{ env }}_PREFIX = {% for C in config.compiler %} $$($(SPACK) -e ../compilers/{{ C.toolchain }} find --format '{prefix}' {{ C.spec }}){% endfor %}

{{ env }}/compilers.yaml:
	$(SPACK) compiler find --scope=user $(call compiler_bin_dirs, $({{ env }}_PREFIX))

{% endfor %}

-include ../Make.inc

ifeq (,$(filter clean,$(MAKECMDGOALS)))
{% for env in environments %}
include {{ env }}/Makefile
{% endfor %}
endif

